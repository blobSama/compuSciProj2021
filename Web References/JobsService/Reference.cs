//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace compuSciProj2021.JobsService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="jobsServiceSoap", Namespace="http://tempuri.org/")]
    public partial class jobsService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplyingUsrsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetjobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsntRelevantOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertUsrOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAplctnOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCitisOperationCompleted;
        
        private System.Threading.SendOrPostCallback findwrkplceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsrInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback WrkplceByOffrOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback isAppliedOperationCompleted;
        
        private System.Threading.SendOrPostCallback isAnsweredOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserRepliesOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertOfferOperationCompleted;
        
        private System.Threading.SendOrPostCallback acceptOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsAcceptedOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSortedJobsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public jobsService() {
            this.Url = global::compuSciProj2021.Properties.Settings.Default.compuSciProj2021_JobsService_jobsService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event GetApplyingUsrsCompletedEventHandler GetApplyingUsrsCompleted;
        
        /// <remarks/>
        public event GetjobsCompletedEventHandler GetjobsCompleted;
        
        /// <remarks/>
        public event IsntRelevantCompletedEventHandler IsntRelevantCompleted;
        
        /// <remarks/>
        public event InsertUsrCompletedEventHandler InsertUsrCompleted;
        
        /// <remarks/>
        public event InsertAplctnCompletedEventHandler InsertAplctnCompleted;
        
        /// <remarks/>
        public event GetCitisCompletedEventHandler GetCitisCompleted;
        
        /// <remarks/>
        public event findwrkplceCompletedEventHandler findwrkplceCompleted;
        
        /// <remarks/>
        public event GetUsrInfoCompletedEventHandler GetUsrInfoCompleted;
        
        /// <remarks/>
        public event WrkplceByOffrCompletedEventHandler WrkplceByOffrCompleted;
        
        /// <remarks/>
        public event UpdateRplyCompletedEventHandler UpdateRplyCompleted;
        
        /// <remarks/>
        public event isAppliedCompletedEventHandler isAppliedCompleted;
        
        /// <remarks/>
        public event isAnsweredCompletedEventHandler isAnsweredCompleted;
        
        /// <remarks/>
        public event GetReplyCompletedEventHandler GetReplyCompleted;
        
        /// <remarks/>
        public event UserRepliesCompletedEventHandler UserRepliesCompleted;
        
        /// <remarks/>
        public event insertOfferCompletedEventHandler insertOfferCompleted;
        
        /// <remarks/>
        public event acceptCompletedEventHandler acceptCompleted;
        
        /// <remarks/>
        public event IsAcceptedCompletedEventHandler IsAcceptedCompleted;
        
        /// <remarks/>
        public event RejectCompletedEventHandler RejectCompleted;
        
        /// <remarks/>
        public event GetSortedJobsCompletedEventHandler GetSortedJobsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetApplyingUsrs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetApplyingUsrs(string w) {
            object[] results = this.Invoke("GetApplyingUsrs", new object[] {
                        w});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplyingUsrsAsync(string w) {
            this.GetApplyingUsrsAsync(w, null);
        }
        
        /// <remarks/>
        public void GetApplyingUsrsAsync(string w, object userState) {
            if ((this.GetApplyingUsrsOperationCompleted == null)) {
                this.GetApplyingUsrsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplyingUsrsOperationCompleted);
            }
            this.InvokeAsync("GetApplyingUsrs", new object[] {
                        w}, this.GetApplyingUsrsOperationCompleted, userState);
        }
        
        private void OnGetApplyingUsrsOperationCompleted(object arg) {
            if ((this.GetApplyingUsrsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplyingUsrsCompleted(this, new GetApplyingUsrsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Getjobs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Getjobs() {
            object[] results = this.Invoke("Getjobs", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetjobsAsync() {
            this.GetjobsAsync(null);
        }
        
        /// <remarks/>
        public void GetjobsAsync(object userState) {
            if ((this.GetjobsOperationCompleted == null)) {
                this.GetjobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetjobsOperationCompleted);
            }
            this.InvokeAsync("Getjobs", new object[0], this.GetjobsOperationCompleted, userState);
        }
        
        private void OnGetjobsOperationCompleted(object arg) {
            if ((this.GetjobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetjobsCompleted(this, new GetjobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsntRelevant", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IsntRelevant(int offerNum) {
            this.Invoke("IsntRelevant", new object[] {
                        offerNum});
        }
        
        /// <remarks/>
        public void IsntRelevantAsync(int offerNum) {
            this.IsntRelevantAsync(offerNum, null);
        }
        
        /// <remarks/>
        public void IsntRelevantAsync(int offerNum, object userState) {
            if ((this.IsntRelevantOperationCompleted == null)) {
                this.IsntRelevantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsntRelevantOperationCompleted);
            }
            this.InvokeAsync("IsntRelevant", new object[] {
                        offerNum}, this.IsntRelevantOperationCompleted, userState);
        }
        
        private void OnIsntRelevantOperationCompleted(object arg) {
            if ((this.IsntRelevantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsntRelevantCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertUsr", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertUsr(string id, string fName, string lName, string addrs, string phone, string mailAdd, int city) {
            this.Invoke("InsertUsr", new object[] {
                        id,
                        fName,
                        lName,
                        addrs,
                        phone,
                        mailAdd,
                        city});
        }
        
        /// <remarks/>
        public void InsertUsrAsync(string id, string fName, string lName, string addrs, string phone, string mailAdd, int city) {
            this.InsertUsrAsync(id, fName, lName, addrs, phone, mailAdd, city, null);
        }
        
        /// <remarks/>
        public void InsertUsrAsync(string id, string fName, string lName, string addrs, string phone, string mailAdd, int city, object userState) {
            if ((this.InsertUsrOperationCompleted == null)) {
                this.InsertUsrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertUsrOperationCompleted);
            }
            this.InvokeAsync("InsertUsr", new object[] {
                        id,
                        fName,
                        lName,
                        addrs,
                        phone,
                        mailAdd,
                        city}, this.InsertUsrOperationCompleted, userState);
        }
        
        private void OnInsertUsrOperationCompleted(object arg) {
            if ((this.InsertUsrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertUsrCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertAplctn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertAplctn(Application A) {
            this.Invoke("InsertAplctn", new object[] {
                        A});
        }
        
        /// <remarks/>
        public void InsertAplctnAsync(Application A) {
            this.InsertAplctnAsync(A, null);
        }
        
        /// <remarks/>
        public void InsertAplctnAsync(Application A, object userState) {
            if ((this.InsertAplctnOperationCompleted == null)) {
                this.InsertAplctnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAplctnOperationCompleted);
            }
            this.InvokeAsync("InsertAplctn", new object[] {
                        A}, this.InsertAplctnOperationCompleted, userState);
        }
        
        private void OnInsertAplctnOperationCompleted(object arg) {
            if ((this.InsertAplctnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAplctnCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCitis", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCitis() {
            object[] results = this.Invoke("GetCitis", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCitisAsync() {
            this.GetCitisAsync(null);
        }
        
        /// <remarks/>
        public void GetCitisAsync(object userState) {
            if ((this.GetCitisOperationCompleted == null)) {
                this.GetCitisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCitisOperationCompleted);
            }
            this.InvokeAsync("GetCitis", new object[0], this.GetCitisOperationCompleted, userState);
        }
        
        private void OnGetCitisOperationCompleted(object arg) {
            if ((this.GetCitisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCitisCompleted(this, new GetCitisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/findwrkplce", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet findwrkplce(string u) {
            object[] results = this.Invoke("findwrkplce", new object[] {
                        u});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void findwrkplceAsync(string u) {
            this.findwrkplceAsync(u, null);
        }
        
        /// <remarks/>
        public void findwrkplceAsync(string u, object userState) {
            if ((this.findwrkplceOperationCompleted == null)) {
                this.findwrkplceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindwrkplceOperationCompleted);
            }
            this.InvokeAsync("findwrkplce", new object[] {
                        u}, this.findwrkplceOperationCompleted, userState);
        }
        
        private void OnfindwrkplceOperationCompleted(object arg) {
            if ((this.findwrkplceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findwrkplceCompleted(this, new findwrkplceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUsrInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUsrInfo(string uId) {
            object[] results = this.Invoke("GetUsrInfo", new object[] {
                        uId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsrInfoAsync(string uId) {
            this.GetUsrInfoAsync(uId, null);
        }
        
        /// <remarks/>
        public void GetUsrInfoAsync(string uId, object userState) {
            if ((this.GetUsrInfoOperationCompleted == null)) {
                this.GetUsrInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsrInfoOperationCompleted);
            }
            this.InvokeAsync("GetUsrInfo", new object[] {
                        uId}, this.GetUsrInfoOperationCompleted, userState);
        }
        
        private void OnGetUsrInfoOperationCompleted(object arg) {
            if ((this.GetUsrInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsrInfoCompleted(this, new GetUsrInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WrkplceByOffr", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet WrkplceByOffr(int offerNum) {
            object[] results = this.Invoke("WrkplceByOffr", new object[] {
                        offerNum});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void WrkplceByOffrAsync(int offerNum) {
            this.WrkplceByOffrAsync(offerNum, null);
        }
        
        /// <remarks/>
        public void WrkplceByOffrAsync(int offerNum, object userState) {
            if ((this.WrkplceByOffrOperationCompleted == null)) {
                this.WrkplceByOffrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWrkplceByOffrOperationCompleted);
            }
            this.InvokeAsync("WrkplceByOffr", new object[] {
                        offerNum}, this.WrkplceByOffrOperationCompleted, userState);
        }
        
        private void OnWrkplceByOffrOperationCompleted(object arg) {
            if ((this.WrkplceByOffrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WrkplceByOffrCompleted(this, new WrkplceByOffrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRply", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateRply(string reply, int offerNumber, string usrId) {
            this.Invoke("UpdateRply", new object[] {
                        reply,
                        offerNumber,
                        usrId});
        }
        
        /// <remarks/>
        public void UpdateRplyAsync(string reply, int offerNumber, string usrId) {
            this.UpdateRplyAsync(reply, offerNumber, usrId, null);
        }
        
        /// <remarks/>
        public void UpdateRplyAsync(string reply, int offerNumber, string usrId, object userState) {
            if ((this.UpdateRplyOperationCompleted == null)) {
                this.UpdateRplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRplyOperationCompleted);
            }
            this.InvokeAsync("UpdateRply", new object[] {
                        reply,
                        offerNumber,
                        usrId}, this.UpdateRplyOperationCompleted, userState);
        }
        
        private void OnUpdateRplyOperationCompleted(object arg) {
            if ((this.UpdateRplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRplyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isApplied", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isApplied(int offerNum, string id) {
            object[] results = this.Invoke("isApplied", new object[] {
                        offerNum,
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isAppliedAsync(int offerNum, string id) {
            this.isAppliedAsync(offerNum, id, null);
        }
        
        /// <remarks/>
        public void isAppliedAsync(int offerNum, string id, object userState) {
            if ((this.isAppliedOperationCompleted == null)) {
                this.isAppliedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisAppliedOperationCompleted);
            }
            this.InvokeAsync("isApplied", new object[] {
                        offerNum,
                        id}, this.isAppliedOperationCompleted, userState);
        }
        
        private void OnisAppliedOperationCompleted(object arg) {
            if ((this.isAppliedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isAppliedCompleted(this, new isAppliedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isAnswered", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isAnswered(int offerNum, string userId) {
            object[] results = this.Invoke("isAnswered", new object[] {
                        offerNum,
                        userId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isAnsweredAsync(int offerNum, string userId) {
            this.isAnsweredAsync(offerNum, userId, null);
        }
        
        /// <remarks/>
        public void isAnsweredAsync(int offerNum, string userId, object userState) {
            if ((this.isAnsweredOperationCompleted == null)) {
                this.isAnsweredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisAnsweredOperationCompleted);
            }
            this.InvokeAsync("isAnswered", new object[] {
                        offerNum,
                        userId}, this.isAnsweredOperationCompleted, userState);
        }
        
        private void OnisAnsweredOperationCompleted(object arg) {
            if ((this.isAnsweredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isAnsweredCompleted(this, new isAnsweredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReply", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReply(int offerNum, string usrId) {
            object[] results = this.Invoke("GetReply", new object[] {
                        offerNum,
                        usrId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReplyAsync(int offerNum, string usrId) {
            this.GetReplyAsync(offerNum, usrId, null);
        }
        
        /// <remarks/>
        public void GetReplyAsync(int offerNum, string usrId, object userState) {
            if ((this.GetReplyOperationCompleted == null)) {
                this.GetReplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReplyOperationCompleted);
            }
            this.InvokeAsync("GetReply", new object[] {
                        offerNum,
                        usrId}, this.GetReplyOperationCompleted, userState);
        }
        
        private void OnGetReplyOperationCompleted(object arg) {
            if ((this.GetReplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReplyCompleted(this, new GetReplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserReplies", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UserReplies(string usrId) {
            object[] results = this.Invoke("UserReplies", new object[] {
                        usrId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UserRepliesAsync(string usrId) {
            this.UserRepliesAsync(usrId, null);
        }
        
        /// <remarks/>
        public void UserRepliesAsync(string usrId, object userState) {
            if ((this.UserRepliesOperationCompleted == null)) {
                this.UserRepliesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserRepliesOperationCompleted);
            }
            this.InvokeAsync("UserReplies", new object[] {
                        usrId}, this.UserRepliesOperationCompleted, userState);
        }
        
        private void OnUserRepliesOperationCompleted(object arg) {
            if ((this.UserRepliesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserRepliesCompleted(this, new UserRepliesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertOffer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void insertOffer(string workId, string descript, System.DateTime uploadDate, int city) {
            this.Invoke("insertOffer", new object[] {
                        workId,
                        descript,
                        uploadDate,
                        city});
        }
        
        /// <remarks/>
        public void insertOfferAsync(string workId, string descript, System.DateTime uploadDate, int city) {
            this.insertOfferAsync(workId, descript, uploadDate, city, null);
        }
        
        /// <remarks/>
        public void insertOfferAsync(string workId, string descript, System.DateTime uploadDate, int city, object userState) {
            if ((this.insertOfferOperationCompleted == null)) {
                this.insertOfferOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertOfferOperationCompleted);
            }
            this.InvokeAsync("insertOffer", new object[] {
                        workId,
                        descript,
                        uploadDate,
                        city}, this.insertOfferOperationCompleted, userState);
        }
        
        private void OninsertOfferOperationCompleted(object arg) {
            if ((this.insertOfferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertOfferCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/accept", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void accept(string uId, int offerNum) {
            this.Invoke("accept", new object[] {
                        uId,
                        offerNum});
        }
        
        /// <remarks/>
        public void acceptAsync(string uId, int offerNum) {
            this.acceptAsync(uId, offerNum, null);
        }
        
        /// <remarks/>
        public void acceptAsync(string uId, int offerNum, object userState) {
            if ((this.acceptOperationCompleted == null)) {
                this.acceptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnacceptOperationCompleted);
            }
            this.InvokeAsync("accept", new object[] {
                        uId,
                        offerNum}, this.acceptOperationCompleted, userState);
        }
        
        private void OnacceptOperationCompleted(object arg) {
            if ((this.acceptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.acceptCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsAccepted", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsAccepted(string uId, int offerNum) {
            object[] results = this.Invoke("IsAccepted", new object[] {
                        uId,
                        offerNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsAcceptedAsync(string uId, int offerNum) {
            this.IsAcceptedAsync(uId, offerNum, null);
        }
        
        /// <remarks/>
        public void IsAcceptedAsync(string uId, int offerNum, object userState) {
            if ((this.IsAcceptedOperationCompleted == null)) {
                this.IsAcceptedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsAcceptedOperationCompleted);
            }
            this.InvokeAsync("IsAccepted", new object[] {
                        uId,
                        offerNum}, this.IsAcceptedOperationCompleted, userState);
        }
        
        private void OnIsAcceptedOperationCompleted(object arg) {
            if ((this.IsAcceptedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsAcceptedCompleted(this, new IsAcceptedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Reject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Reject(string uId, int offerNumber) {
            this.Invoke("Reject", new object[] {
                        uId,
                        offerNumber});
        }
        
        /// <remarks/>
        public void RejectAsync(string uId, int offerNumber) {
            this.RejectAsync(uId, offerNumber, null);
        }
        
        /// <remarks/>
        public void RejectAsync(string uId, int offerNumber, object userState) {
            if ((this.RejectOperationCompleted == null)) {
                this.RejectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectOperationCompleted);
            }
            this.InvokeAsync("Reject", new object[] {
                        uId,
                        offerNumber}, this.RejectOperationCompleted, userState);
        }
        
        private void OnRejectOperationCompleted(object arg) {
            if ((this.RejectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSortedJobs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSortedJobs(int city, int time) {
            object[] results = this.Invoke("GetSortedJobs", new object[] {
                        city,
                        time});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSortedJobsAsync(int city, int time) {
            this.GetSortedJobsAsync(city, time, null);
        }
        
        /// <remarks/>
        public void GetSortedJobsAsync(int city, int time, object userState) {
            if ((this.GetSortedJobsOperationCompleted == null)) {
                this.GetSortedJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSortedJobsOperationCompleted);
            }
            this.InvokeAsync("GetSortedJobs", new object[] {
                        city,
                        time}, this.GetSortedJobsOperationCompleted, userState);
        }
        
        private void OnGetSortedJobsOperationCompleted(object arg) {
            if ((this.GetSortedJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSortedJobsCompleted(this, new GetSortedJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Application {
        
        private string userIdField;
        
        private string workIdField;
        
        private string replyField;
        
        private string cvField;
        
        private int offerNumberField;
        
        /// <remarks/>
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string WorkId {
            get {
                return this.workIdField;
            }
            set {
                this.workIdField = value;
            }
        }
        
        /// <remarks/>
        public string Reply {
            get {
                return this.replyField;
            }
            set {
                this.replyField = value;
            }
        }
        
        /// <remarks/>
        public string Cv {
            get {
                return this.cvField;
            }
            set {
                this.cvField = value;
            }
        }
        
        /// <remarks/>
        public int offerNumber {
            get {
                return this.offerNumberField;
            }
            set {
                this.offerNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetApplyingUsrsCompletedEventHandler(object sender, GetApplyingUsrsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplyingUsrsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplyingUsrsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetjobsCompletedEventHandler(object sender, GetjobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetjobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetjobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void IsntRelevantCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void InsertUsrCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void InsertAplctnCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetCitisCompletedEventHandler(object sender, GetCitisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCitisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCitisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void findwrkplceCompletedEventHandler(object sender, findwrkplceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findwrkplceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findwrkplceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetUsrInfoCompletedEventHandler(object sender, GetUsrInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsrInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsrInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void WrkplceByOffrCompletedEventHandler(object sender, WrkplceByOffrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WrkplceByOffrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WrkplceByOffrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UpdateRplyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void isAppliedCompletedEventHandler(object sender, isAppliedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isAppliedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isAppliedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void isAnsweredCompletedEventHandler(object sender, isAnsweredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isAnsweredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isAnsweredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetReplyCompletedEventHandler(object sender, GetReplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UserRepliesCompletedEventHandler(object sender, UserRepliesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserRepliesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserRepliesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void insertOfferCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void acceptCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void IsAcceptedCompletedEventHandler(object sender, IsAcceptedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsAcceptedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsAcceptedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RejectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetSortedJobsCompletedEventHandler(object sender, GetSortedJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSortedJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSortedJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591